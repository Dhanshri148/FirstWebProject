// <auto-generated />
using System;
using HealthifyMe.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthifyMe.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HealthifyMe.Web.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("HealthifyMe.Web.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(100)");

                    b.Property<long>("ContactNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("HealthifyMe.Web.Models.DietChart", b =>
                {
                    b.Property<int>("DietChartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DietImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DietChartId");

                    b.ToTable("DietCharts");
                });

            modelBuilder.Entity("HealthifyMe.Web.Models.Dietition", b =>
                {
                    b.Property<int>("DietitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<long>("ContactNumber")
                        .HasColumnType("bigint");

                    b.Property<int?>("DietChartId")
                        .HasColumnType("int");

                    b.Property<int>("DietitionExperience")
                        .HasColumnType("int");

                    b.Property<string>("DietitionName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("Fees")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.HasKey("DietitionId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DietChartId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Dietitions");
                });

            modelBuilder.Entity("HealthifyMe.Web.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExerciseCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ExerciseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseId");

                    b.HasIndex("ExerciseCategoryId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("HealthifyMe.Web.Models.ExerciseCategory", b =>
                {
                    b.Property<int>("ExerciseCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExerciseCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseCategoryId");

                    b.ToTable("ExerciseCategories");
                });

            modelBuilder.Entity("HealthifyMe.Web.Models.Dietition", b =>
                {
                    b.HasOne("HealthifyMe.Web.Models.Category", "Category")
                        .WithMany("Dietitians")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthifyMe.Web.Models.DietChart", "DietCharts")
                        .WithMany("Dietitions")
                        .HasForeignKey("DietChartId");

                    b.HasOne("HealthifyMe.Web.Models.Exercise", "Exercises")
                        .WithMany("Dietitions")
                        .HasForeignKey("ExerciseId");
                });

            modelBuilder.Entity("HealthifyMe.Web.Models.Exercise", b =>
                {
                    b.HasOne("HealthifyMe.Web.Models.ExerciseCategory", "ExerciseCategory")
                        .WithMany("Exercise")
                        .HasForeignKey("ExerciseCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
